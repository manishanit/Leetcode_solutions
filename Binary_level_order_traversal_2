/*This got accepted in Runtime: 8 ms, faster than 66.56% of C++ online submissions for Binary Tree Level Order Traversal II.
Memory Usage: 13.6 MB, less than 100.00% of C++ online submissions for Binary Tree Level Order Traversal II.*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:

    vector<vector<int>> levelOrderBottom(TreeNode* root) {        
        vector<vector<int>> v;
        queue<TreeNode*> q;
        vector<int> atLevel;
        if(!root)
            return v;
        q.push(root);
        int nodeCount=0;
        while(!q.empty())
        {
            nodeCount=q.size();
            while(nodeCount!=0)
            {
                TreeNode* temp=q.front();
                atLevel.push_back(temp->val);
                q.pop();
                if(temp->left!=NULL)
                    q.push(temp->left);
                if(temp->right!=NULL)
                    q.push(temp->right);
                nodeCount--;
            }
            v.insert(v.begin(),atLevel);
            atLevel.clear();
        }
        return v;
    }
};
