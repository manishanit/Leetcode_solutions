/*
Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.

To make problem a bit easier, all A, B, C, D have same length of N where 0 ≤ N ≤ 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.
*/


class Solution {
public:
    int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {
        unordered_map<int,vector<vector<int>>> mp;
        for(int i=0;i<A.size();i++)
        {
            for(int j=0;j<B.size();j++)
            {
                int sum=A[i]+B[j];
                vector<int> temp={i,j};
                if(mp.find(sum)==mp.end())
                {
                    vector<vector<int>> temp1;
                    temp1.push_back(temp);
                    mp.insert(make_pair(sum,temp1));
                }
                else
                    mp[sum].push_back(temp);
            }
        }
        int ans=0;
        for(int i=0;i<C.size();i++)
        {
            for(int j=0;j<D.size();j++)
            {
                int sum=-1*(C[i]+D[j]);
                if(mp.find(sum)!=mp.end())
                    ans+=(mp[sum].size());
            }
        }
        return ans;
    }
};


#Solution 2

class Solution {
public:
    int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {
        unordered_map<int,int> mp;
        for(int i=0;i<A.size();i++)
        {
            for(int j=0;j<B.size();j++)
            {
                int sum=A[i]+B[j];
                if(mp.find(sum)==mp.end())
                    mp.insert(make_pair(sum,1));
                else
                    mp[sum]++;
            }
        }
        int ans=0;
        for(int i=0;i<C.size();i++)
        {
            for(int j=0;j<D.size();j++)
            {
                int sum=-1*(C[i]+D[j]);
                if(mp.find(sum)!=mp.end())
                    ans+=mp[sum];
            }
        }
        return ans;
    }
};
