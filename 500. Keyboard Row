class Solution {
public:
    vector<string> findWords(vector<string>& words) {
        unordered_map<char,int> map;
        vector<string> result;
        for(char ch='A';ch<='Z';ch++)
        {
            if(ch=='A'||ch=='S'||ch=='D'||ch=='F'||ch=='G'||ch=='H'||ch=='J'||ch=='K'
              ||ch=='L')
                map[ch]=2;
            else if(ch=='Q'||ch=='W'||ch=='E'||ch=='R'||ch=='T'||ch=='Y'||ch=='U'||ch=='I'
              ||ch=='O'||ch=='P')
                map[ch]=1;
            else
                map[ch]=3;
        }
        for(char ch='a';ch<='z';ch++)
        {
            if(ch=='a'||ch=='s'||ch=='d'||ch=='f'||ch=='g'||ch=='h'||ch=='j'||ch=='k'
              ||ch=='l')
                map[ch]=2;
            else if(ch=='q'||ch=='w'||ch=='e'||ch=='r'||ch=='t'||ch=='y'||ch=='u'||ch=='i'
              ||ch=='o'||ch=='p')
                map[ch]=1;
            else
                map[ch]=3;
        }
        for(int i=0;i<words.size();i++)
        {
            string s=words[i];
            int row=-1;
            int flag=0;
            for(int j=0;j<s.length();j++)
            {
                if(row==-1)
                    row=map[s[j]];
                else if(row!=map[s[j]])
                {
                    flag=1;
                    break;
                }
            }
            if(flag==0)
                result.push_back(s);
        }
        return result;
    }
};
