class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int j=0;
        if(nums.size()==0)
            return 1;
        long offset=INT_MAX;
        for(int i=0;i<nums.size();i++)
        {
                if(nums[i]<0)
                    continue;
                if(nums[i]<offset)
                offset=nums[i];
        }
        if(offset ==INT_MAX || offset>1)
            return 1;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]<=0 || nums[i]>=INT_MAX)
            {
                int temp=nums[i];
                nums[i]=nums[j];
                nums[j]=temp;
                j++;
            }
        }
      
        cout<<endl;
        for(int i=j;i<nums.size();i++)
        {
               if(abs(nums[i]) < nums.size()-j+1 && nums[abs(nums[i])-1+j]>0)
                    nums[abs(nums[i])+j-1]=(-1*nums[abs(nums[i])+j-1]);
        }
        for(int i=j;i<nums.size();i++)
        {
            if(nums[i]>0)
                return(i-j+1);
        }
        return (nums.size()-j+1);
    }
};
