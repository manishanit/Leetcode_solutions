/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        if(root==NULL)
            return false;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty())
        {
            int nodeCount=q.size();
            int flagx=0;
            int flagy=0;
            while(nodeCount!=0)
            {
                TreeNode* temp=q.front();
                q.pop();
                if((temp->left && temp->left->val==x && temp->right && temp->right->val==y)
                  ||(temp->left && temp->left->val==y && temp->right && temp->right->val==x))
                    return false;
                
                if(temp->left!=NULL)
                {
                    if(temp->left->val==x)
                        flagx++;
                    else if(temp->left->val==y)
                        flagy++;
                    q.push(temp->left);
                }
                if(temp->right!=NULL)
                {
                    if(temp->right->val==x)
                        flagx++;
                    else if(temp->right->val==y)
                        flagy++;
                    q.push(temp->right);
                }
                nodeCount--;
            }
            if(flagx==1 && flagy==1)
                return true;
            else if(flagx==1 && flagy==0)
                return false;
            else if(flagy==1 && flagx==0)
                return false;
        }
        return false;
    }
};
