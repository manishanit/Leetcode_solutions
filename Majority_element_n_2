/*This approach got accepted in leetcode , however, in leetcode we are considering
that majority element always exists, my approach also considers if majority element does not
exists*/

/*We have used the Moore's voting algorithm for this*/

class Solution {
public:
    int majorityCandidate(vector<int>& nums)
    {
        int majority_index=0;
        int count=1;
        for(int i=1;i<nums.size();i++)
        {
            if(nums[i]==nums[majority_index])
                count++;
            else
                count--;
            if(count==0)
            {
                majority_index=i;
                count=1;
            }
        }
        return nums[majority_index];
    }
    int majorityElement(vector<int>& nums) {
        int candidate=majorityCandidate(nums);
  /*      int count=0;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==candidate)
                count++;
        }
        if(count>=((nums.size())/2))*/
            return candidate;
        //return -1;
    }
};
