/*The following code got accepted in leetcode with the following:
Runtime: 12 ms, faster than 84.37% of C++ online submissions for Balanced Binary Tree.
Memory Usage: 17.4 MB, less than 69.49% of C++ online submissions for Balanced Binary Tree.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root)
    {
        if(root==NULL)
            return 0;
         return 1+max(maxDepth(root->left),maxDepth(root->right));
        
    }
    bool isBalanced(TreeNode* root) {
        if(root==NULL)
            return true;
        int lDepth=maxDepth(root->left);
        int rDepth=maxDepth(root->right);
        if(abs(lDepth-rDepth)<=1 && isBalanced(root->left) && isBalanced(root->right))
            return true;
        return false;
    }
};
