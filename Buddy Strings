class Solution {
public:
    bool buddyStrings(string A, string B) {
        int firstIndex=-1;
        if(A.length()!=B.length())
            return false;
        int j=0;
        int count=0;
        while(j<A.length())
        {
            if(A[j]!=B[j])
            {
                if(firstIndex!=-1)
                {
                    if((A[j]!=B[firstIndex] || B[j]!=A[firstIndex])||count>2)
                        return false;
                }
                else
                    firstIndex=j;
                count++;
            }
            j++;
        }
        if(count>2)
            return false;
        else if(count==0)
        {
            vector<int> map(26);
            for(int i=0;i<A.length();i++)
                map[A[i]-'a']++;
            for(int c:map)
            {
                if(c>1)
                    return true;
            }
            return false;
        }
        return true;
    }
};
