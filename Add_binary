/* This solution got accepted in the leet code with the following :
Runtime: 4 ms, faster than 80.43% of C++ online submissions for Add Binary.
Memory Usage: 8.4 MB, less than 98.18% of C++ online submissions for Add Binary.
*/

class Solution {
public:
    string addBinary(string a, string b) {
        int carry=0;
        string c;
        int i=a.length()-1;
        int j=b.length()-1;
        if(a.length()>=b.length())
            c=a;
        else
            c=b;
        int k=c.length()-1;
        while(i>=0 && j>=0)
        {
            if((a[i]=='1' && b[j]=='0')||(a[i]=='0' && b[j]=='1'))
            {
                if(carry==0)
                c[k]='1';
                else
                {
                    c[k]='0';
                    carry=1;
                }
            }
            else if(a[i]=='0' && b[j]=='0')
            {
                if(carry==0)
                c[k]='0';
                else
                {
                    c[k]='1';
                    carry=0;
                }
            }
            else if(a[i]=='1' && b[j]=='1')
            {
                if(carry==0)
                    c[k]='0';
                else
                    c[k]='1';
                carry=1;
            }
            i--;
            j--;
            k--;
        }
        while(carry!=0 && k>=0)
        {
            if(c[k]=='0')
            {
                c[k]='1';
                carry=0;
            }
            else
            {
                c[k]='0';
                carry=1;
            }
            k--;
        }
        string c1;
        if(carry==1)
        {
            c1='1';
            c1.append(c);
        }
        if(c1.length()!=0)
            return c1;
        return c;
    }
};
