/*Accepted in leetcode in the following:
Runtime: 32 ms, faster than 67.89% of C++ online submissions for Min Stack.
Memory Usage: 17 MB, less than 56.36% of C++ online submissions for Min Stack.*/

class MinStack {
public:
    /** initialize your data structure here. */
    
    vector<int> value;
    vector<int> min;
    
    MinStack() {
    }
    
    void push(int x) {
        value.push_back(x);
        if(min.size()==0)
            min.push_back(x);
        else
        {
            int ele=min.back();
            if(x<ele)
                min.push_back(x);
            else
                min.push_back(ele);
        }
            
    }
    
    void pop() {
        value.pop_back();
        min.pop_back();
    }
    
    int top() {
        if(value.size()!=0)
        return value.back();
        return -1;
    }
    
    int getMin() {
        if(min.size()==0)
            return -1;
        return min.back();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
