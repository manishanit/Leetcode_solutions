/*This approach uses no inbuilt functions and got accepted in leetcode with the following:
Runtime: 12 ms, faster than 39.46% of C++ online submissions for Valid Palindrome.
Memory Usage: 9.5 MB, less than 40.82% of C++ online submissions for Valid Palindrome.
*/

class Solution {
public:
    bool isPalindrome(string s) {
        if(s=="" || s.length()==1)
            return true;
        int i=0;
        int j=s.length()-1;
        int flag=1;
        while(i<j)
        {
            if(((s[i]>='a' && s[i]<='z')||(s[i]>='A' && s[i]<='Z'))&&((s[j]>='a' && s[j]<='z')||(s[j]>='A' && s[j]<='Z')))
            {
            if(s[i]==s[j] || (s[i]+32)==s[j] || (s[i]==(s[j]+32)))
            {
                flag=1;
                i++;
                j--;
            }
            else
            {
                flag=0;
                break;
            }
            }
            else if((s[i]>='0' && s[i]<='9') && (s[j]>='0' && s[j]<='9') && s[i]==s[j])
            {
                flag=1;
                i++;
                j--;                
            }
            else if(!((s[i]>='a' && s[i]<='z')||(s[i]>='A' && s[i]<='Z')||(s[i]>='0' && s[i]<='9')) && !((s[j]>='a' && s[j]<='z')||(s[j]>='A' && s[j]<='Z')||(s[j]>='0' && s[j]<='9')))
            {
                i++;
                j--;
            }
            else if(!((s[j]>='a' && s[j]<='z')||(s[j]>='A' && s[j]<='Z')||(s[j]>='0' && s[j]<='9')))
                j--;
            else if(!((s[i]>='a' && s[i]<='z')||(s[i]>='A' && s[i]<='Z')||(s[i]>='0' && s[i]<='9')))
                i++;
            else
            {
                flag=0;
                break;
            }
        }
        if(flag==1)
            return true;
        return false;
    }
};
