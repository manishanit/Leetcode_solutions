class Solution {
public:
    void duplicateZeros(vector<int>& arr) {
        vector<int> ans(arr.size(),0);
        int j=0;
        for(int i=0;j<arr.size();i++)
        {
            ans[j]=arr[i];
            j++;
            if(arr[i]==0)
            {
                if(j<arr.size())
                {
                    ans[j]=0;
                    j++;
                }
                else
                    break;
            }
        }
        for(int i=0;i<ans.size();i++)
            arr[i]=ans[i];
    }
};

#approach 2

class Solution {
public:
    void duplicateZeros(vector<int>& arr) {
        int possibleDups=0;
        int length_=arr.size()-1;
        for(int left=0;left<=length_-possibleDups;left++)
        {
            if(arr[left]==0)
            {
                if(left==(length_-possibleDups))
                {
                    arr[length_]=0;
                    length_--;
                    break;
                }
                possibleDups++;
            }
        }
        int last=length_-possibleDups;
        for(int i=last;i>=0;i--)
        {
            if(arr[i]==0)
            {
                arr[i+possibleDups]=0;
                possibleDups--;
                arr[i+possibleDups]=0;
            }
            else
            arr[i+possibleDups]=arr[i];
        }
    }
};
